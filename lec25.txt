
// How does JS execute code and call stack
notes :

1.JS creates Global excution context 
2.Next it creates memory phase
3.Memory phase - In this phase,the variables are set to undefined 
  until the execution phase(next phase) and the functions are set to their definitions.
4.Next it creates the execution phase
5.Execution phase - In this phase,the variables are initialsed to given values and 
  when the function s are called,it creates a memory phase and execution phase for the function 
  just like the main one.


>> Returned value is passed to the global environment.
>> Execution context gets deleted after successful execution.

For live demo:
browser > inspect > Sources
create a snippet with few functions and visually experience the call stack.

>> Google docs Notes - https://docs.google.com/document/d/12n4ekyxO-Jc93xT30-wzRzcFwUz8kpbn8_3NowLDq4g/edit?usp=sharing 

